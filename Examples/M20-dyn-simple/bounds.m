function [ lb,ub, bnds ] = bounds( npts,init,target,rob )
% generate control lower bounds and upper bounds

% bounds for velocity, torque, and torque rate
posinf=rob.r.Qlim(1,:).'; 
possup=rob.r.Qlim(2,:).';

velbnd=rob.r.QDlim(2,:).'; %bisognerebbe modificare questo

trqbnd=0.8*[1396.5,1402.3,382.7,45.2,44.6,32.5].';
dtrqbnd=30*trqbnd;

bnds = [posinf,possup,velbnd,trqbnd,dtrqbnd];

limit=1;% of limit of every bound
interpLimit=0.8; % for test case
% interpLimit=0.68;% considering interpolation using 20 pnts, addition limit
% interpLimit=0.7;% considering interpolation using 12 pnts, addition limit
conlb = -[-posinf;velbnd;trqbnd;dtrqbnd]*limit*interpLimit;
conub =  [ possup;velbnd;trqbnd;dtrqbnd]*limit*interpLimit;

tlimit = 100;
lb = [kron(ones(npts,1),conlb);...
    init(:);
    zeros(6,1);...
    zeros(6,1);...
    zeros(6,1);...
    target(:);...
    zeros(6,1);...
    zeros(6,1);...
    zeros(6,1);...
    0];

ub = [kron(ones(npts,1),conub);...
    init(:);
    zeros(6,1);...
    zeros(6,1);...
    zeros(6,1);
    target(:);...
    zeros(6,1);...
    zeros(6,1);...    
    zeros(6,1);...
    tlimit];


end

